# Launching a simulation
To solver the Euler equations, do

julia /path/to/startup.jl "input_file_name.jl"

where input_file_name.jl is in your current directory.

# The following keys are used for the options dictionary in the input file

"run_type"  : what type of run, 1 = rk4, 4 = Newton finite difference, 5 = Newton complex step (integer)

"order" : order of accuracy of elements, 1-4 will be supported eventually (integer)
"dimensions" : specifies the dimensions of the physical problem, 2D or 3D (integer). Default = 2
"real_time" : have time marching scheme advance real time instead of pseudo-time,
             (Bool), default false

"delta_t" = timestep for rk4 (floating point)
"t_max" = maximum time for rk4 (floating point)

"smb_name" : name of smb file if using Pumi (string), if it appears to be a relative path (ie. does not begin with a "/"), it is relative to the installation directory of PDESolver.  If it appears to be an absolute path, it is treated as such
"dmg_name" : name of dmg file if using Pumi (string), same behavior as "smb_name", default ".null" (you must omit this key if you are using the null geometric model)

"IC_name" : initial condition function name (string)


# Physical constants
"gamma" : the specific heat ratio, Float64, default 1.4
"R" : the ideal gas constant (J/Kg*K), (FLoatingPoint), default 287.058

#Equation options
"variable_type": which set of variables to write the equation in, (Symbol), default
            :conservative

# Solver options
"res_abstol" : stopping tolerance for residual, used by rk4 and Newton methods, (floatingpoint), default 1e-6
"res_reltol"  : stopping tolerance for residual relative to some initial value, (floatingpoint), default 1e-6
"res_reltol0"  : value to use for relative residual calculation, use -1.0 to use residual at initial condition, (floatingpoint), default -1.0
"step_tol" : step size tolerance for Newton methods (floating point)
"itermax" : maximum number of iterations for Newton methods (integer)
"Reltol_funcs"  : an initial condition function name, the residual of the equation using this as the input is used for the relative residual calculation, (ASCIIString), defualt "none".  Note that this function will override res_reltol0 = -1.0
"CFL" : the desired CFL number, used to calculate the timestep for unsteady
        runs, (Float64), default 0.4
"Relfunc_name": the name of an initial condtion, the residual of which is used
                for computing the relative residual for solver stopping 
                criteria, "ASCIIString", default "none".


# boundary condition specification
"numBC" : number of boundary condtions used

# for each boundary condition there must be:
"BCi" : model edges (for 2d) where the boundary condition is applied
"BCi_name" : name of boundary condition to apply

# where i is the index of the boundary condition
# i must have values 1 through numBC

# source term specification (advection equation only)
"SRCname": the name of the source term to use, (ASCIIString), default SRC0

# misc options
"calc_error"  : calculate error norm of values in a file compared to the initial condition, number of values in the file must equal the number of dofs in the mesh, (Bool), default false
"calc_error_infname"  : name of file to load, (ASCIIString), 
"calc_error_outfname"  : name of file to write value to, (ASCIIString), default error_calc.dat
"calc_trunc_error"  : calculate truncation error, IC must be exact solution for this to work, writes value to file error_trunc.dat, (Bool), default false
"calc_havg" : calculate the average minimum distance between nodes (ie. the 
              mesh spacing) and write it to the file "havg.dat", (Bool), default
              false

# algorithmic differentiation options
"res_edge_res" : use an edge based residual data structure (in addition to
                 the standard residual) to make a distance-1 coloring into 
                 a distance-0 coloring, (Bool), default false.
                 This option is dangerous if misused.

# paramters used by boundary and initial condiitions
"Ma" : free stream Mach number (floating point)
"Re" : Reynolds number (using the chord length as the distance) (floatingpoint)
"aoa" : angle of attack in degrees (floating point)
#"rho_free" : free stream density
#"E_free" : free stream energy
"edgestab_gamma"  : edge stabilization parameter, (floatingpoint), default -0.1
"perturb_ic" : add random noise to initial condition, (Bool), default false
"perturb_mag" : magnitude of perturbation (perturbation could be + or -), (Float64), default 0.0
"vortex_x0" : initial x coordinate of the unsteady vortex, (Float64), default 
              0.0
"vortex_strength" : the strength of the unsteady vortex, (Float64), default 
                    1.0


# Algorithmic Differentiatio Options
"use_edge_res" : use the edge based residual (experimental!), (Bool), default
                 false

"write_finalsolution"  : write final solution (in vector form) to file, (Bool), default false
"write_finalresidual"  : write final residual (in vector form) to file, (Bool), default false


# SBP options
"Q_transpose" : enable transpose option within weakdifferentiate!


# stabilization options
"use_edgestab" : use edge stabilization, (Bool), default true
"edgestab_gamma" edge stabilization paramater gamma, (floatingpoint), default -0.1
"use_filter" : use a filtering technique, (Bool), default false
"use_res_filter" : apply the transposed filter to the residual, (Bool), default false
"filter_name", name of filter to apply, (ASCIIString), default "raisedCosineFilter"
"use_dissipation" : use artificial dissipation, (Bool), default false
"dissipation_name" : name of artificial dissipation kernel to use, (ASCIIString), default "none"
"dissipation_const" : constant to multiply dissipation filter by, (Float64), default 0.0
"use_GLS" : use Galerkin Least-Squares stabilization, (Bool), default false
"use_GLS2": use Hughes' formulation of Galerkin Least-Squares, (Bool), default false
"tau_type" : which definition of tau to use of GLS, (Int), default 1
# stabilization preconditioning options
"use_edgestab_prec" : use edge stabilization for preconditioning matrix, (Bool), default false
"use_filter_prec" : use filter for preconditioning matrix, (Bool), default false
"use_dissipation_prec" : use dissipation for preconditioning, (Bool), default false
Note that any values associated with these options are shared with the regular 
(non preconditioning) version

# solve options
"write_entropy" : write the norm of the entropy during every major iteration, 
                  (Bool), default false
"write_entropy_fname" : file name (with extension) to write entropy to, 
                        (ASCIIString), default "entropy.dat"
"check_density" : whether not to check that density > 0 every residual 
                  evalution, (Bool), default true
"check_pressure": whether to not to check that pressure > 0 every residual
                  evaluation, (Bool), default true


# solver debugging options
"writeboundary" : write boundary faces and fluxes to files using the writeBoundary()  function, to files named boundaryfaces.dat, boundaryflux.dat, boundaryflux2.dat, (bool), default false
"writeflux"  : writes the equation flux to the file Fxi.dat, space delimted, default false
"writeq"  : writes solution variables to the file q.dat, space delimited, (Bool) default false

# mesh debugging options
"write_edge_vertnums"  : writes the vertex numbers of every edge to edge_vertnusm.dat (Bool), default false
"write_face_vertnums" : writes vertex number of every face to face_vertnums.dat, (Bool), default false
"write_boundarynums"  : writes the elements  number, global face number of each face with a boundary condition, one per line, to file boundary_nums.dat, (Bool), default false
"write_dxidx"  : writes dxidx for every node to file dxidx.dat, (Bool) default falsea
"write_coords" : writes coordinates of every node to file coords.dat, (Bool), default false
"write_sparsity" : write upper and lower dof bounds to sparsity_bnds.dat, (Bool), default false
"write_sparsity_nodebnds" :  write upper and lower node bounds to sparsity_bnds.dat, (Bool), default false
"write_offsets"  : write the offset values that account for entity orientation
                   to file entity_offsets.dat, (Bool), default false
"verify_coloring"  : verify coloring worked correctly, (Bool), default true
"write_counts"  : write the count of various entities used for estimating memory usage, (Bool), default false


# mesh options
"reordering_algorithm" : which node reordering algorithm to use, options are 
                         "adjacency" for the adjacency based reordering by Zhou 
                          et.al., or "default" for a more simplistic default
"reordering_start_coords" : coordinates of a point to start the reordering at.
                            The highest dof number will be assigned to the vertex
                            nearest this point.  (Array of length 2), default [0, 0].
                            Not supported by the default reordering algorithm.
"coloring_distance" : mesh coloring distance used for jacobian calculation, 
                      (Integer), defalts to the minimum coloring that can be 
                      used with the specified stabilization
"coloring_distance_prec" : coloring distance for preconditioning, see above.

# Newton's Method debugging options
"write_rhs"  : write rhs (residual) to a file (rhs$i.dat) each iteration, (Bool), default false
"write_jac"  : write the Jacobian to a file (jacobian$i.dat) each iteration, (Bool), default false
"print_cond" : calculate and print Jacobian condition number each iteration, (Bool), default false
"write_sol"  : write the solution to a file (res_vec$i.dat) each iteration, (Bool), default false
"write_res"  : write the residual in 3d form (res$i.dat) each iteration, (Bool), default false
"write_qic"  : write the initial condition, assembled into 3d array form, to file qic.dat, (Bool), default false
"write_vis"  : write Paraview files (solution_newton$i.pvtu) each iteration, (Bool), default false
"print_eigs" : calculate and print eigenvalues to STDOUT.  The calculation is very expensive, (Bool), default false
"write_eigs" : calculate and write eigenvalues to file (eigs$i.dat) each iteration.  If both pritn_eigs and write_eigs are true, only one calculation is performed.  (Bool), default false
"write_eigdecomp" : calculate and write to file the eigenvalues and eignenvectors of the jacobian, only supported for a Jacobian owned by Julia, (Bool), default false
     Writes to 4 files, eigdecomp_real$i.dat - real parts of eigenvalues
                        eigdecomp_imag$i.dat - complex parts of eigenvalues
                        eigdecomp_realvecs$i.dat - real parts of eigenvectors
                        eigdecomp_imagvecs$i.dat - complex parts of eigenvectors
"output_freq" : write paraview files every this many iterations, subject to write_vis, (Integer), default 1
"recalc_prec_freq" : recalculate the preconditioner matrix every this many 
                     iterations, if doing an interative solve, (Integer),
                     default 1

# Newton's Method options
"jac_type"  : set calculation/storage method of Jacobian, (Int), 1 == dense, 2 == sparse, default= sparse, 3 = Petsc (therefore sparse)
"epsilon"  : perturbation size when calculation Jacobian, (Float64), default 1e-6 for finite difference, 1e-20 to complex step
"newton_globalize_euler"  : use the Pseudo-Transient Continuation 
                            (aka. implicit Euler) globalization, (Bool), default                            false
"euler_tau": the magnitude factor of the initial pseudo-timestep for the
             Euler globalization, (FloatingPoint), default 1.0


# Newton-Krylov options
"krylov_reltol"  : relative residual tolerance for krylov solver, (Float64),
                   default 1e-2
"krylov_abstol"  : absolute residual tolerance for kylov solver, (Float64),
                   default 1e-12
"krylov_dtol"  : relative residual tolerance for detecting divergence, 
                 (Float64), default 1e5
"krylov_itermax"  : maximum number of krylov iterations, (Int), default 1000
"krylov_gamma"  : parameter for updating krylov_reltol, (Float64), default 2.0



# postprocessing options
"do_postproc" : do postprocessing of any kind, (Bool), default false
"exact_soln_func" : one of the IC functions used to compute the exact solution,
                    (ASCIIString), default "nothing"
